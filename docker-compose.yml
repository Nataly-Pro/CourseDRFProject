version: '3'

services:

  redis:
    image: redis
    ports:
      - '6379:6379'
    networks:
      - nginx_network

  db:
    image:  postgres
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - nginx_network

  app:
    build: .
    restart: always
    tty: true
    command: bash -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nginx_network

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app
    networks:
      - nginx_network

  celery-beat:
    build: .
    restart: always
    tty: true
    command: celery -A config beat -l info -S django
    depends_on:
      - db
      - app
    networks:
      - nginx_network

  nginx:
    image: nginx:1.13
    ports:
      - '8000:80'
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge

volumes:
  pg_data:
